package com.example.justracing;

import java.util.Hashtable;


@SuppressWarnings("rawtypes")
public class Graph {
	// private long key;
	private Hashtable<Long, Hashtable> nodes;
	private int level;
	private long firstSeed;
	
	
	public Graph () {
		nodes = new Hashtable<Long, Hashtable>();
		level = 0;
		firstSeed = 897987;
	}

	public int getLevel() {
		return level;
	}

	public void setLevel(int pLevel) {
		level = pLevel;
	}
	
	public void initializeGraph(int pInitialSeed) {
		Lehmer initialNode = new Lehmer();
		long initialRandomId = initialNode.doLhemer(firstSeed);
		level++;
		ActualTrackSector initialSector = new ActualTrackSector(initialRandomId);
		
		initialNode.setMAXNUMBER(3);
		long amountOfRoads = initialNode.doLhemer(initialRandomId);
		amountOfRoads += 1;				// amount of roads to creat
		
		initialNode.setMAXNUMBER(2^60);
		for (int amountOfNodes = 0; amountOfNodes < amountOfRoads ; amountOfNodes++) {
			long newRandomId = initialNode.doLhemer(initialRandomId);
			ActualTrackSector newSector = new ActualTrackSector(newRandomId);
			// here we will change the seed
			initialNode.setSeed(newRandomId);
		}
	}
	
	
	
	
}
